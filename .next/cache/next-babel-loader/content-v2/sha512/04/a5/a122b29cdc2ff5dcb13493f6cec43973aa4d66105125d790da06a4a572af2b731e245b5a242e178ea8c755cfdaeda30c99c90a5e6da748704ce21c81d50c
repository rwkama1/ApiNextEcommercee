{"ast":null,"code":"// Helper method to wait for a middleware to execute before continuing\n// And to throw an error when an error happens in a middleware\nexport default function initMiddleware(middleware) {\n  return (req, res) => new Promise((resolve, reject) => {\n    middleware(req, res, result => {\n      if (result instanceof Error) {\n        return reject(result);\n      }\n\n      return resolve(result);\n    });\n  });\n}","map":{"version":3,"sources":["D:/TODO (Desarrollo Software)/Tutoriales y demas cosas/APINext/APINextEcommercee/lib/init-middleware.js"],"names":["initMiddleware","middleware","req","res","Promise","resolve","reject","result","Error"],"mappings":"AAAA;AACA;AACA,eAAe,SAASA,cAAT,CAAwBC,UAAxB,EAAoC;AACjD,SAAO,CAACC,GAAD,EAAMC,GAAN,KACL,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AAC/BL,IAAAA,UAAU,CAACC,GAAD,EAAMC,GAAN,EAAYI,MAAD,IAAY;AAC/B,UAAIA,MAAM,YAAYC,KAAtB,EAA6B;AAC3B,eAAOF,MAAM,CAACC,MAAD,CAAb;AACD;;AACD,aAAOF,OAAO,CAACE,MAAD,CAAd;AACD,KALS,CAAV;AAMD,GAPD,CADF;AASD","sourcesContent":["// Helper method to wait for a middleware to execute before continuing\n// And to throw an error when an error happens in a middleware\nexport default function initMiddleware(middleware) {\n  return (req, res) =>\n    new Promise((resolve, reject) => {\n      middleware(req, res, (result) => {\n        if (result instanceof Error) {\n          return reject(result)\n        }\n        return resolve(result)\n      })\n    })\n}\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import cors from \"../cors\";\nimport { FactoryLogic } from \"e-commercee/ECommerce/dist/logic/FactoryLogic\";\nimport { Article } from \"e-commercee/ECommerce/dist/shared/entity/Article\";\nexport default async function (req, res) {\n  if (req.method === \"GET\") {\n    try {\n      await cors(req, res);\n      const {\n        pbarcode\n      } = req.query;\n      const getArticle = await FactoryLogic.getLArticle().getArticle(pbarcode);\n      return res.send(getArticle);\n    } catch (error) {\n      return res.status(500).send(\"Could not search article \" + error.message);\n    }\n  }\n\n  if (req.method === \"POST\") {\n    await cors(req, res);\n\n    try {\n      const data = req.body;\n      const getcategory = await FactoryLogic.getLCategory().getCategory(data.categoryname);\n      var article = new Article(data.barcode, data.name, data.price, data.stock, data.description, data.img, getcategory);\n      await FactoryLogic.getLArticle().addArticle(article);\n      return res.status(200).send(\"Success\");\n    } catch (error) {\n      return res.status(500).send(\"Could not add article: \" + error.message);\n    }\n  }\n\n  if (req.method === \"PUT\") {\n    await cors(req, res);\n\n    try {\n      const data = req.body;\n      const getcategory = await FactoryLogic.getLCategory().getCategory(data.categoryname);\n      var article = new Article(data.barcode, data.name, data.price, data.stock, data.description, data.img, getcategory);\n      await FactoryLogic.getLArticle().updateArticle(article);\n      return res.status(200).send(\"Success\");\n    } catch (error) {\n      return res.status(500).send(\"Could not update article: \" + error.message);\n    }\n  }\n\n  if (req.method === \"DELETE\") {\n    await cors(req, res);\n    const data = req.body;\n\n    try {\n      var article = new Article(data.barcode, \"\", 0, 0, \"\", \"\", null);\n      await FactoryLogic.getInstance().deleteArticle(article);\n      return res.status(200).send(\"Success\");\n    } catch (error) {\n      return res.status(500).send(\"Could not DELETE article: \" + error.message);\n    }\n  }\n}","map":{"version":3,"sources":["D:/TODO (Desarrollo Software)/Tutoriales y demas cosas/APINext/APINextEcommercee/pages/api/article/article.js"],"names":["cors","FactoryLogic","Article","req","res","method","pbarcode","query","getArticle","getLArticle","send","error","status","message","data","body","getcategory","getLCategory","getCategory","categoryname","article","barcode","name","price","stock","description","img","addArticle","updateArticle","getInstance","deleteArticle"],"mappings":"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","sourcesContent":[" import cors from \"../cors\";\r\n import { FactoryLogic } from \"e-commercee/ECommerce/dist/logic/FactoryLogic\";\r\n import { Article } from \"e-commercee/ECommerce/dist/shared/entity/Article\";\r\n \r\nexport default async function (req, res) {\r\n    if(req.method===\"GET\")\r\n    {\r\n        try\r\n        {\r\n     await cors(req, res)\r\n     const {pbarcode} = req.query;\r\n     \r\n      const getArticle=await FactoryLogic.getLArticle().getArticle(pbarcode);\r\n      return res.send(getArticle);\r\n    }\r\n    catch (error) {\r\n      return res.status(500).send(\"Could not search article \"+error.message);\r\n    }\r\n    }\r\n    if(req.method===\"POST\")\r\n    {\r\n      await cors(req, res)\r\n      try\r\n      {\r\n      const data = req.body;\r\n      const getcategory=await FactoryLogic.getLCategory().getCategory(data.categoryname);\r\n      var article=new Article(data.barcode,data.name,data.price,data.stock,data.description,data.img,getcategory);\r\n      await FactoryLogic.getLArticle().addArticle(article);\r\n      return res.status(200).send(\"Success\");   \r\n      }\r\n      catch (error) {\r\n        return res.status(500).send(\"Could not add article: \"+error.message);    \r\n        \r\n      }\r\n    }\r\n     if(req.method===\"PUT\")\r\n        {\r\n            await cors(req, res)\r\n            try\r\n            {\r\n            const data = req.body;\r\n            const getcategory=await FactoryLogic.getLCategory().getCategory(data.categoryname);\r\n            var article=new Article(data.barcode,data.name,data.price,data.stock,data.description,data.img,getcategory);\r\n            await FactoryLogic.getLArticle().updateArticle(article);\r\n            return res.status(200).send(\"Success\");   \r\n            }\r\n            catch (error) {\r\n              return res.status(500).send(\"Could not update article: \"+error.message);    \r\n              \r\n            }\r\n        }\r\n    if(req.method===\"DELETE\")\r\n        {\r\n                await cors(req, res);\r\n                const data = req.body;\r\n                try\r\n                {\r\n                var article=new Article(data.barcode,\"\",0,0,\"\",\"\",null);\r\n                await FactoryLogic.getInstance().deleteArticle(article);\r\n                return res.status(200).send(\"Success\");   \r\n            }\r\n            catch (error) {\r\n            return res.status(500).send(\"Could not DELETE article: \"+error.message);    \r\n            \r\n            }   \r\n        }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}